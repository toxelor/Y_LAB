const LoginForm = ({ setIsLogin, loginName, setLoginName, loginPassword, setLoginPassword, login, triedToLogIn, setTriedToLogIn, loggedIn, setLoggedIn }) => {

    const handleLoginChange = (e) => {
        setLoginName(e.target.value)
        setTriedToLogIn(false)
        setLoggedIn(false)
    }

    const handlePasswordChange = (e) => {
        setLoginPassword(e.target.value)
        setTriedToLogIn(false)
        setLoggedIn(false)
    }

    const switchToReg = () => {
        setIsLogin(false)
        setLoginName("")
        setLoginPassword("")
        setTriedToLogIn(false)
        setLoggedIn(false)
    }

    return (
        <div className="form-wrapper">
            <input value={loginName} onChange={handleLoginChange} placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω"></input>
            <input type="password" value={loginPassword} onChange={handlePasswordChange} placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"></input>
            <button onClick={login}>–í–æ–π—Ç–∏</button>
            {
                triedToLogIn
                &&
                (loggedIn
                ?
                <span className="success">–í—ã –≤–æ—à–ª–∏</span>
                :
                <span className="failure">–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Çüò•</span>)
            }
            <span>–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <span onClick={switchToReg} className="switch">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å ‚Üí</span></span>
        </div>
    )
}

export default LoginForm